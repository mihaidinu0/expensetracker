name: Deploy to Digital Ocean Droplet

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: DigitalOcean
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Copy files to Droplet
      run: |
        scp -o StrictHostKeyChecking=no -r . \
          root@${{ secrets.DROPLET_IP }}:/root/expense-tracker

    - name: Deploy Application
      run: |
        ssh -o StrictHostKeyChecking=no root@${{ secrets.DROPLET_IP }} <<EOF
        set -e  # Exit immediately on error

        # Create .env file with secrets
        cat <<ENV > /root/expense-tracker/.env
        POSTGRES_USER=${{ secrets.POSTGRES_USER }}
        POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
        POSTGRES_DB=${{ secrets.POSTGRES_DB }}
        JWT_SECRET=${{ secrets.JWT_SECRET }}
        JWT_EXPIRATION_MS=${{ secrets.JWT_EXPIRATION_MS }}
        ENV

        # Set strict permissions for .env
        chmod 600 /root/expense-tracker/.env

        cd /root/expense-tracker

        # Cleanup previous deployment
        docker-compose down --remove-orphans -v || true

        # Pull latest images and rebuild
        docker-compose up -d --build --force-recreate

        # Cleanup old images
        docker image prune -af
        EOF
